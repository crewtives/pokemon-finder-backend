{"version":3,"sources":["src/storage/services.js","src/utils/url.js","src/actions/userActions.js","src/constants/user.js","src/api/user.js","src/components/Web/Login/Login.js","src/components/Web/Onboarding/Onboarding.js","src/components/Web/commons/navbar/NavbarHome.js","src/api/pokemonData.js","src/actions/pokemonDataActions.js","src/constants/pokemonData.js","src/actions/pokemonStartupActions.js","src/api/pokemonStartup.js","src/constants/pokemonStartup.js","src/components/Web/pokemonStartupLaboratory/pokemonStartupLaboratory.js","src/components/Web/commons/MyPokemons/MyPokemons.js","src/components/Web/Home/Home.js","navigator/Navigator.js","src/reducers/auth/loginReducer.js","src/reducers/pokemon/pokemonStartupReducer.js","src/reducers/pokemon/pokemonDataReducer.js","src/reducers/index.js","App.js","web-build/register-service-worker.js","assets/images/onboarding.jpg","assets/images/onboarding1.png","assets/fonts/Raleway-Bold.ttf","assets/fonts/Raleway-BoldItalic.ttf","assets/fonts/Raleway-ThinItalic.ttf","assets/fonts/Raleway-Italic.ttf","assets/fonts/Raleway-Regular.ttf","assets/fonts/Raleway-Thin.ttf"],"names":["get","key","a","async","AsyncStorage","getItem","value","console","log","url","pad","number","length","str","getDataSuccess","user","type","fetchData","name","email","dispatch","fetch","method","headers","Accept","body","JSON","stringify","then","Response","Promise","all","json","fetchLoginUser","item","token","setItem","catch","error","fetchGetUserData","Authorization","fetchGetUser","Login","props","handleMainCard","ref","mainCard","handleNameFromGroup","nameFromGroup","handleEmailFromGroup","emailFromGroup","handleNameInput","nameInput","handleEmailInput","emailInput","loginRequest","getData","state","this","focus","navigate","navigation","View","style","styles","container","StatusBar","backgroundColor","barStyle","marginTop","marginLeft","wp","flexDirection","handleMainLogo","delay","animation","fontFamily","fontSize","hp","color","handleSecLogo","flex","margin","Text","title","formGroup","labelInput","TextInput","inputStyle","onChangeText","setState","TouchableOpacity","onPress","borderRadius","isfetching","ActivityIndicator","padding","textAlign","Component","connect","loginUser","isFeching","StyleSheet","create","marginRight","borderColor","borderWidth","data","text","image","require","Onboarding","view","mainLogo","secLogo","_renderItem","ImageBackground","slide","imageStyle","resizeMode","height","undefined","width","justifyContent","borderBottomLeftRadius","borderBottomRightRadius","source","position","marginBottom","_keyExtractor","_renderNextButton","buttonCircle","_renderPrevButton","_renderDoneButton","navigateEnable","fadeOutDown","fadeOutUp","zoomOut","e","translucent","extraData","keyExtractor","renderItem","activeDotStyle","dotStyle","renderDoneButton","renderNextButton","renderPrevButton","onDone","toLogin","showPrevButton","alignSelf","NavbarHome","isfetchingUser","fetchGetUserPokemon","navbar","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","logoContainer","logo","containerButtonStart","alignItems","buttonStart","getUserPokemonDataSuccess","userPokemons","fetchPokemonData","id","fetchPokemon","pokemon","fetchSaveUserPokemonData","pokemon_id","user_id","fetchSaveUserPokemon","fetchPokemonStartupData","fetchPokemonStartup","pokemons","pokemonStartupLaboratory","handleMainContainer","mainContainer","handlePokemonSelector","pokemonSelector","handleSelectedPokemon","selectedPokemon","_selectPokemon","bounceOut","getPokemonData","_savePokemon","fetchGetUserPokemonData","getPokemonStartup","presentation","Math","floor","random","fetchClearPokemonData","blurRadius","uri","duration","top","right","FontAwesome","_clearPokemon","size","randomPresentation","Image","specie","flavor_text_entries","flavor_text","bottom","ScrollView","isfetchingPokemons","FlatList","horizontal","pagingEnabled","showsHorizontalScrollIndicator","legacyImplementation","marginHorizontal","textTransform","types","map","pokemonData","isfetchingPokemon","pokemonStartup","MyPokemons","searchTerm","searchAttribute","fetchFilterUserPokemonData","textAlignVertical","placeholder","placeholderTextColor","borderBottomColor","borderBottomWidth","iconStyle","pokemonApi","search","searchData","filter","tempData","indexOf","push","Home","checkLab","reset","index","routes","lab_stage","left","toLaboratory","paddingTop","Linking","fetching","Stack","createStackNavigator","Navigator","fontsLoaded","route","Font","checkLogin","Platform","OS","NavigationContainer","headerMode","initialRouteName","Screen","options","component","initialState","loginReducer","action","pokemonStartupReducer","pokemonDataReducer","combineReducers","store","createStore","Reducers","applyMiddleware","thunk","App","navigator","window","addEventListener","serviceWorker","register","scope","info","module","exports"],"mappings":"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","file":"static/js/app.11cfe922.chunk.js","sourcesContent":["import { AsyncStorage } from 'react-native';\r\n\r\nexport const save = async (item, value) => {\r\n    try {\r\n        await AsyncStorage.setItem(item, value);\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const get = async (key) => {\r\n    try {\r\n        const value = await AsyncStorage.getItem(key);\r\n\r\n        if (value !== null) {\r\n            return value\r\n        } else {\r\n            return ''\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","export const url = 'http://pokemonfinder.crewtives.com/api'\r\n\r\nexport const pad = (number, length) => {\r\n    let str = '' + number;\r\n    while (str.length < length) {\r\n        str = '0' + str;\r\n    }\r\n    return str;\r\n}","import { LOGIN_USER, LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE } from '../constants/user'\r\nimport { fetchLoginUser, fetchGetUser } from '../api/user'\r\nimport { save } from '../storage/services'\r\n\r\nexport const getData = () => {\r\n    return { type: LOGIN_USER }\r\n}\r\n\r\nexport const getDataSuccess = (user) => {\r\n    return { type: LOGIN_USER_SUCCESS, user }\r\n}\r\n\r\nexport const getDateFailure = (data) => {\r\n    return { type: LOGIN_USER_FAILURE }\r\n}\r\n\r\nexport const fetchData = (name, email) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        fetchLoginUser(name, email)\r\n            .then(([response, json]) => {\r\n                save('pokemonFinderToken', json.token)\r\n                dispatch(getDataSuccess(json))\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n}\r\n\r\nexport const fetchGetUserData = () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        fetchGetUser()\r\n            .then(([response, json]) => {\r\n                dispatch(getDataSuccess(json))\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n}\r\n","export const LOGIN_USER = \"LOGIN_USER\";\r\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\r\nexport const LOGIN_USER_FAILURE = \"LOGIN_USER_FAILURE\";","import { url } from '../utils/url'\r\nimport { get } from '../storage/services';\r\n\r\nexport const fetchLoginUser = (name, email) => {\r\n\r\n    return fetch(url + '/authenticate', {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ name: name, email: email })\r\n    }).then(Response => {\r\n        return Promise.all([Response, Response.json()])\r\n    })\r\n}\r\n\r\nexport const fetchGetUser = async () => {\r\n\r\n    let token = await get('pokemonFinderToken')\r\n\r\n    return fetch(url + '/getUser', {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(Response => {\r\n        return Promise.all([Response, Response.json()])\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport {\r\n    View,\r\n    StyleSheet,\r\n    StatusBar,\r\n    Text,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    ActivityIndicator,\r\n} from 'react-native';\r\n\r\nimport * as Animatable from 'react-native-animatable';\r\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getData, fetchData } from '../../../actions/userActions'\r\n\r\nclass Login extends Component {\r\n\r\n    handleMainCard = ref => this.mainCard = ref;\r\n    handleNameFromGroup = ref => this.nameFromGroup = ref;\r\n    handleEmailFromGroup = ref => this.emailFromGroup = ref;\r\n    handleNameInput = ref => this.nameInput = ref;\r\n    handleEmailInput = ref => this.emailInput = ref;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: props.name,\r\n            email: props.email,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.emailInput.focus()\r\n\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if (this.props.user) {\r\n            const { navigate } = this.props.navigation;\r\n            navigate('Home')\r\n        }\r\n    }\r\n\r\n    loginRequest = async () => {\r\n\r\n        this.props.getData()\r\n\r\n        this.props.fetchData(this.state.name, this.state.email)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n\r\n                <StatusBar backgroundColor=\"#000022\" barStyle=\"light-content\" />\r\n                <View style={{\r\n                    marginTop: 20,\r\n                    marginLeft: wp(25),\r\n                    flexDirection: 'row'\r\n                }}>\r\n                    <Animatable.Text ref={this.handleMainLogo} delay={750} animation=\"fadeInUp\" style={{\r\n                        fontFamily: 'Raleway-Bold',\r\n                        fontSize: hp(3.5),\r\n                        color: '#FECA1B'\r\n                    }}>\r\n                        pokemon\r\n                    </Animatable.Text>\r\n                    <Animatable.Text ref={this.handleSecLogo} delay={750} animation=\"fadeInDown\" style={{\r\n                        fontFamily: 'Raleway-Regular',\r\n                        fontSize: hp(3.5),\r\n                        color: '#FECA1B'\r\n                    }}>\r\n                        finder\r\n                        </Animatable.Text>\r\n                </View>\r\n\r\n                <Animatable.View ref={this.handleMainCard} animation=\"bounceIn\" delay={250} style={styles.mainCard}>\r\n                    <View style={{ flexDirection: 'column' }}>\r\n                        <View style={{ flex: 1, margin: 20 }}>\r\n                            <Text style={styles.title}>explore the pokemon world</Text>\r\n                        </View>\r\n\r\n                        <Animatable.View ref={this.handleNameFromGroup} style={styles.formGroup}>\r\n                            <Text style={styles.labelInput}>NAME OF YOUR CHARACTER:</Text>\r\n                            <TextInput\r\n                                ref={this.handleNameInput}\r\n                                style={styles.inputStyle}\r\n                                onChangeText={(name) => this.setState({ name })}\r\n                                value={this.state.name}\r\n                            />\r\n                        </Animatable.View>\r\n\r\n                        <Animatable.View ref={this.handleEmailFromGroup} style={styles.formGroup}>\r\n                            <Text style={styles.labelInput}>EMAIL:</Text>\r\n                            <TextInput\r\n                                ref={this.handleEmailInput}\r\n                                style={styles.inputStyle}\r\n                                onChangeText={(email) => this.setState({ email })}\r\n                                value={this.state.email}\r\n                            />\r\n                        </Animatable.View>\r\n\r\n                        <View style={styles.formGroup}>\r\n                            <TouchableOpacity onPress={() => this.loginRequest()} style={{\r\n                                backgroundColor: '#000022',\r\n                                borderRadius: 10,\r\n                            }}>\r\n\r\n                                {this.props.isfetching ? <ActivityIndicator style={{\r\n                                    padding: 20,\r\n\r\n                                }} color=\"rgb(232, 163, 235)\" /> : <Text style={{\r\n                                    color: 'white',\r\n                                    fontSize: hp(2),\r\n                                    fontFamily: 'Raleway-Bold',\r\n                                    textAlign: 'center',\r\n                                    padding: 20,\r\n                                }}>I WANT MY IMMERSION!</Text>}\r\n\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                </Animatable.View>\r\n            </View>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        user: state.loginUser.user,\r\n        name: state.loginUser.name,\r\n        email: state.loginUser.email,\r\n        isfetching: state.loginUser.isFeching,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getData: () => {\r\n            return dispatch(getData())\r\n        },\r\n        fetchData: (name, email) => {\r\n            return dispatch(fetchData(name, email))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#000022',\r\n    },\r\n    mainCard: {\r\n        flex: 1,\r\n        margin: 20,\r\n        marginLeft: wp(25),\r\n        marginRight: wp(25),\r\n        backgroundColor: 'white',\r\n        borderRadius: 5\r\n    },\r\n    formGroup: { flex: 1, flexDirection: 'column', margin: 20 },\r\n    labelInput: { fontFamily: 'Raleway-Bold', fontSize: hp(2) },\r\n    inputStyle: {\r\n        borderColor: '#000022',\r\n        borderWidth: 1,\r\n        marginTop: hp(1),\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        fontFamily: 'Raleway-Regular',\r\n        color: '#000022',\r\n        fontSize: hp(2.5),\r\n    },\r\n    title: {\r\n        fontFamily: 'Raleway-Bold',\r\n        fontSize: hp(3),\r\n        textAlign: 'center',\r\n        marginTop: hp(5)\r\n    }\r\n});\r\n","import React, { Component } from 'react';\r\n\r\nimport { View, Text, ImageBackground, StyleSheet, StatusBar, Platform, Image } from 'react-native';\r\n\r\nimport AppIntroSlider from 'react-native-app-intro-slider';\r\n\r\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\n\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\nconst data = [\r\n    {\r\n        key: 1,\r\n        title: 'this is pokemon finder, expokemon?',\r\n        text: 'a little game for sick fans, amazing things will happen here',\r\n        image: require('../../../../assets/images/onboarding.jpg'),\r\n    },\r\n    {\r\n        key: 2,\r\n        title: 'all power of expo web features and crewtives ♥ on laravel engine',\r\n        text: 'its time for wild stuffs, and maybe for a beer...',\r\n        image: require('../../../../assets/images/onboarding1.png'),\r\n\r\n    },\r\n];\r\n\r\nclass Onboarding extends Component {\r\n\r\n    handleMainCard = ref => this.view = ref;\r\n    handleMainLogo = ref => this.mainLogo = ref;\r\n    handleSecLogo = ref => this.secLogo = ref;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navigateEnable: false\r\n        }\r\n    }\r\n\r\n    _renderItem = ({ item }) => {\r\n        return (\r\n            <ImageBackground\r\n                style={styles.slide}\r\n                imageStyle={{\r\n                    resizeMode: 'stretch',\r\n                    height: undefined,\r\n                    width: undefined,\r\n                    justifyContent: 'center',\r\n                    borderBottomLeftRadius: 20,\r\n                    borderBottomRightRadius: 20,\r\n                }}\r\n                source={item.image}\r\n            >\r\n                <Animatable.View\r\n                    animation=\"fadeInDown\" delay={500}\r\n                    style={{\r\n                        position: 'absolute',\r\n                        backgroundColor: '#000022',\r\n                        borderBottomLeftRadius: 20,\r\n                        borderBottomRightRadius: 20,\r\n                    }}>\r\n                    <Animatable.Text animation=\"fadeInDown\" delay={1000} style={{\r\n                        fontSize: hp(4),\r\n                        fontFamily: 'Raleway-Bold',\r\n                        margin: 20,\r\n                        color: 'white'\r\n                    }}>{item.title}</Animatable.Text>\r\n                    <Animatable.Text animation=\"fadeInUp\" delay={1000} style={{\r\n                        fontSize: hp(2),\r\n                        fontFamily: 'Raleway-Thin',\r\n                        marginLeft: 20,\r\n                        marginBottom: hp(2),\r\n                        color: 'white'\r\n                    }}>{item.text}</Animatable.Text>\r\n                </Animatable.View>\r\n            </ImageBackground>\r\n        );\r\n    }\r\n\r\n    _keyExtractor = (item) => item.text;\r\n\r\n    _renderNextButton = () => {\r\n        return (\r\n            <View style={styles.buttonCircle}>\r\n                <Text style={{\r\n                    padding: 20, color: '#000022',\r\n                    fontFamily: 'Raleway-bold',\r\n                }}>NEXT</Text>\r\n            </View>\r\n        );\r\n    };\r\n\r\n    _renderPrevButton = () => {\r\n        return (\r\n            <View style={styles.buttonCircle}>\r\n                <Text style={{\r\n                    padding: 20, color: '#000022',\r\n                    fontFamily: 'Raleway-bold',\r\n                }}>BACK</Text>\r\n            </View>\r\n        );\r\n    };\r\n\r\n    _renderDoneButton = () => {\r\n        return (\r\n            <View style={styles.buttonCircle}>\r\n                <Text style={{\r\n                    padding: 20, color: '#000022',\r\n                    fontFamily: 'Raleway-bold',\r\n                }}>LET'S GO!</Text>\r\n            </View>\r\n        );\r\n    };\r\n\r\n    toLogin() {\r\n        this.secLogo.fadeOutDown()\r\n        this.mainLogo.fadeOutUp()\r\n        this.view.zoomOut().then(e => this.setState({ navigateEnable: true }, () => {\r\n            const { navigate } = this.props.navigation\r\n            navigate('Login')\r\n        }))\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={{ backgroundColor: '#000022', flex: 1 }}>\r\n                <View style={{\r\n                    marginTop: 20,\r\n                    marginLeft: wp(25),\r\n                    flexDirection: 'row'\r\n                }}>\r\n                    <Animatable.Text ref={this.handleMainLogo} delay={750} animation=\"fadeInUp\" style={{\r\n                        fontFamily: 'Raleway-Bold',\r\n                        fontSize: hp(3.5),\r\n                        color: '#FECA1B'\r\n                    }}>\r\n                        pokemon\r\n                    </Animatable.Text>\r\n                    <Animatable.Text ref={this.handleSecLogo} delay={750} animation=\"fadeInDown\" style={{\r\n                        fontFamily: 'Raleway-Regular',\r\n                        fontSize: hp(3.5),\r\n                        color: '#FECA1B'\r\n                    }}>\r\n                        finder\r\n                        </Animatable.Text>\r\n                </View>\r\n                <Animatable.View ref={this.handleMainCard} animation=\"bounceIn\" delay={250} style={{\r\n                    flex: 1,\r\n                    margin: 20,\r\n                    marginLeft: wp(25),\r\n                    marginRight: wp(25),\r\n                    backgroundColor: 'white',\r\n                    borderRadius: 5\r\n                }}\r\n                >\r\n\r\n                    <StatusBar backgroundColor='transparent' translucent barStyle='dark-content' />\r\n\r\n                    <AppIntroSlider\r\n                        extraData={this.state}\r\n                        keyExtractor={this._keyExtractor}\r\n                        renderItem={this._renderItem}\r\n                        data={data}\r\n                        activeDotStyle={{ backgroundColor: 'rgb(232, 163, 235)' }}\r\n                        dotStyle={{ backgroundColor: 'rgb(0, 0, 34)' }}\r\n                        renderDoneButton={this._renderDoneButton}\r\n                        renderNextButton={this._renderNextButton}\r\n                        renderPrevButton={this._renderPrevButton}\r\n                        onDone={() => this.toLogin()}\r\n                        showPrevButton\r\n                    />\r\n\r\n                </Animatable.View>\r\n            </View>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#000000',\r\n    },\r\n    slide: {\r\n        height: hp(75),\r\n        width: wp(35),\r\n        alignSelf: 'center',\r\n    },\r\n    text: {\r\n        color: '#333',\r\n        marginTop: 92,\r\n        textAlign: 'center',\r\n    },\r\n    buttonCircle: {\r\n        borderRadius: 20,\r\n        justifyContent: 'center',\r\n    },\r\n\r\n});\r\n\r\nexport default Onboarding; ","import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\r\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\nimport Constants from 'expo-constants';\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\nimport { fetchGetUserData } from '../../../../actions/userActions'\r\nimport { connect } from 'react-redux';\r\n\r\nclass NavbarHome extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n\r\n        this.props.fetchGetUserData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={{\r\n                flexDirection: 'row',\r\n                marginTop: 20,\r\n                marginLeft: wp(25),\r\n                marginRight: wp(25)\r\n            }}>\r\n                <View style={{\r\n                    flex: 1,\r\n                    flexDirection: 'row',\r\n                }}>\r\n                    <Animatable.Text ref={this.handleMainLogo} delay={750} animation=\"fadeInUp\" style={{\r\n                        fontFamily: 'Raleway-Bold',\r\n                        fontSize: hp(3.5),\r\n                        color: '#FECA1B',\r\n                    }}>\r\n                        pokemon\r\n                    </Animatable.Text>\r\n                    <Animatable.Text ref={this.handleSecLogo} delay={750} animation=\"fadeInDown\" style={{\r\n                        fontFamily: 'Raleway-Regular',\r\n                        fontSize: hp(3.5),\r\n                        color: '#FECA1B',\r\n                    }}>\r\n                        finder\r\n                    </Animatable.Text>\r\n\r\n                </View>\r\n                {/* <View style={{ flex: 0.5 }}>\r\n                    <Animatable.View delay={1500} animation=\"fadeInRight\" style={{\r\n                        backgroundColor: \"#000022\",\r\n                        justifyContent: 'center',\r\n                        borderRadius: 10,\r\n                        marginLeft: wp(1)\r\n                    }}>\r\n                        <Text style={{\r\n                            fontFamily: 'Raleway-Regular',\r\n                            fontSize: hp(2),\r\n                            color: '#FECA1B',\r\n                            textAlignVertical: 'center',\r\n                            padding: 5\r\n                        }}>Place: {this.props.place}</Text>\r\n                    </Animatable.View>\r\n                </View> */}\r\n                <Animatable.View delay={750} animation=\"fadeIn\" style={{ justifyContent: 'center', flex: 1 }}>\r\n                    <Text style={{\r\n                        color: 'white',\r\n                        fontFamily: 'Raleway-Bold',\r\n                        fontSize: hp(2.5),\r\n                        alignSelf: \"flex-end\"\r\n                    }}>{this.props.user.name}</Text>\r\n                </Animatable.View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.loginUser.user,\r\n        isfetchingUser: state.loginUser.isFeching,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchGetUserData: () => {\r\n            return dispatch(fetchGetUserData())\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavbarHome);\r\n\r\nconst styles = StyleSheet.create({\r\n    navbar: {\r\n        flexDirection: 'row',\r\n        height: '7.5%',\r\n        backgroundColor: '#ffffff',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n        },\r\n        shadowOpacity: 0.22,\r\n        shadowRadius: 2.22,\r\n        elevation: 3,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n        },\r\n        shadowOpacity: 0.18,\r\n        shadowRadius: 1.00,\r\n        elevation: 1,\r\n    },\r\n    logoContainer: {\r\n        justifyContent: 'center',\r\n        flex: 1\r\n    },\r\n    logo: {\r\n        width: 195,\r\n        height: 24,\r\n        justifyContent: 'center'\r\n    },\r\n    containerButtonStart: {\r\n        flex: .10,\r\n        backgroundColor: '#D6A2E8',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    buttonStart: {\r\n        fontFamily: 'Raleway-bold',\r\n        fontSize: hp(2.25)\r\n    }\r\n});\r\n","import { url } from '../utils/url'\r\nimport { get } from '../storage/services';\r\n\r\nexport const fetchPokemon = async (id) => {\r\n    let token = await get('pokemonFinderToken')\r\n\r\n    return fetch(url + '/getPokemon?pokemon_id='+id+'', {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n    }).then(Response => {\r\n        return Promise.all([Response, Response.json()])\r\n    })\r\n}\r\n\r\nexport const fetchSaveUserPokemon = async (pokemon_id, user_id) => {\r\n    let token = await get('pokemonFinderToken')\r\n\r\n    return fetch(url + '/saveUserPokemon', {\r\n        method: 'POST',\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ pokemon_id: pokemon_id, user_id: user_id })\r\n    }).then(Response => {\r\n        return Promise.all([Response, Response.json()])\r\n    })\r\n}\r\n\r\nexport const fetchGetUserPokemon = async () => {\r\n\r\n    let token = await get('pokemonFinderToken')\r\n\r\n    return fetch(url + '/getUserPokemons', {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n    }).then(Response => {\r\n        return Promise.all([Response, Response.json()])\r\n    })\r\n}","import {\r\n    POKEMON_DATA,\r\n    POKEMON_DATA_SUCCESS,\r\n    POKEMON_DATA_FAILURE,\r\n    CLEAR_POKEMON_DATA,\r\n    SAVE_USER_POKEMON_DATA,\r\n\r\n} from '../constants/pokemonData'\r\n\r\nimport { fetchPokemon, fetchGetUserPokemon, fetchSaveUserPokemon } from '../api/pokemonData'\r\n\r\nexport const getPokemonData = () => {\r\n    return { type: POKEMON_DATA }\r\n}\r\n\r\nexport const clearPokemonData = () => {\r\n    return { type: CLEAR_POKEMON_DATA }\r\n}\r\n\r\nexport const getPokemonDataSuccess = (pokemon) => {\r\n    return { type: POKEMON_DATA_SUCCESS, pokemon }\r\n}\r\n\r\nexport const getUserPokemonDataSuccess = (userPokemons) => {\r\n    return { type: SAVE_USER_POKEMON_DATA, userPokemons }\r\n}\r\n\r\nexport const getPokemonDataFailure = (data) => {\r\n    return { type: POKEMON_DATA_FAILURE }\r\n}\r\n\r\nexport const fetchPokemonData = (id) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        fetchPokemon(id)\r\n            .then(([response, json]) => {\r\n                dispatch(getPokemonDataSuccess(json))\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n}\r\n\r\nexport const fetchSaveUserPokemonData = (pokemon_id, user_id) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        fetchSaveUserPokemon(pokemon_id, user_id)\r\n            .then(([response, json]) => {\r\n                dispatch(getUserPokemonDataSuccess(json))\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n}\r\n\r\nexport const fetchFilterUserPokemonData = (search) => {\r\n\r\n    return (dispatch) => {\r\n        let searchData = [];\r\n\r\n        fetchGetUserPokemon()\r\n            .then(([response, json]) => {\r\n                json.filter(tempData => {\r\n                    if (tempData.pokemonApi.name.indexOf(search) >= 0) {\r\n                        searchData.push(tempData)\r\n                    }\r\n                    dispatch(getUserPokemonDataSuccess(searchData))\r\n                })\r\n\r\n            }).catch((error) => console.log(error))\r\n    }\r\n}\r\n\r\nexport const fetchGetUserPokemonData = () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        fetchGetUserPokemon()\r\n            .then(([response, json]) => {\r\n                dispatch(getUserPokemonDataSuccess(json))\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n}\r\n\r\nexport const fetchClearPokemonData = () => {\r\n\r\n    return clearPokemonData()\r\n\r\n}\r\n\r\n","export const POKEMON_DATA = \"POKEMON_DATA\";\r\nexport const POKEMON_DATA_SUCCESS = \"POKEMON_DATA_SUCCESS\";\r\nexport const POKEMON_DATA_FAILURE = \"POKEMON_DATA_FAILURE\";\r\nexport const CLEAR_POKEMON_DATA = \"CLEAR_POKEMON_DATA\";\r\n\r\nexport const SAVE_USER_POKEMON_DATA = \"SAVE_USER_POKEMON_DATA\";","import { POKEMON_STARTUP, POKEMON_STARTUP_SUCCESS, POKEMON_STARTUP_FAILURE } from '../constants/pokemonStartup'\r\nimport { fetchPokemonStartup } from '../api/pokemonStartup'\r\n\r\nexport const getPokemonStartup = () => {\r\n    return { type: POKEMON_STARTUP }\r\n}\r\n\r\nexport const getPokemonStartupSuccess = (pokemons) => {\r\n    return { type: POKEMON_STARTUP_SUCCESS, pokemons }\r\n}\r\n\r\nexport const getPokemonStartupFailure = (data) => {\r\n    return { type: POKEMON_STARTUP_FAILURE }\r\n}\r\n\r\nexport const fetchPokemonStartupData = () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        fetchPokemonStartup()\r\n            .then(([response, json]) => {\r\n                dispatch(getPokemonStartupSuccess(json))\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n}\r\n","import { url } from '../utils/url'\r\nimport { get } from '../storage/services';\r\n\r\nexport const fetchPokemonStartup = async() => {\r\n    let token = await get('pokemonFinderToken')\r\n\r\n    return fetch(url + '/getStartupPokemons', {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n    }).then(Response => {\r\n        return Promise.all([Response, Response.json()])\r\n    })\r\n}","export const POKEMON_STARTUP = \"POKEMON_STARTUP\";\r\nexport const POKEMON_STARTUP_SUCCESS = \"POKEMON_STARTUP_SUCCESS\";\r\nexport const POKEMON_STARTUP_FAILURE = \"POKEMON_STARTUP_FAILURE\";","import React, { Component } from 'react';\r\nimport { View, Text, ImageBackground, FlatList, StyleSheet, StatusBar, ScrollView, Image, ActivityIndicator } from 'react-native';\r\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\nimport NavbarHome from '../commons/navbar/NavbarHome'\r\n\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getPokemonData,\r\n    fetchClearPokemonData,\r\n    fetchPokemonData,\r\n    fetchSaveUserPokemonData,\r\n    fetchGetUserPokemonData\r\n} from '../../../actions/pokemonDataActions'\r\nimport { getPokemonStartup, fetchPokemonStartupData } from '../../../actions/pokemonStartupActions'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\n\r\nimport { pad } from '../../../utils/url'\r\n\r\nclass pokemonStartupLaboratory extends Component {\r\n\r\n    handleMainContainer = ref => this.mainContainer = ref;\r\n    handleMainCard = ref => this.view = ref;\r\n    handleMainLogo = ref => this.mainLogo = ref;\r\n    handleSecLogo = ref => this.secLogo = ref;\r\n\r\n    handlePokemonSelector = ref => this.pokemonSelector = ref;\r\n    handleSelectedPokemon = ref => this.selectedPokemon = ref;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.fetchGetUserPokemonData()\r\n\r\n        this.props.getPokemonStartup()\r\n\r\n        this.props.fetchPokemonStartupData()\r\n    }\r\n\r\n    randomPresentation() {\r\n        let presentation = ['ohh... ', 'yep... ', 'good choice... ', 'its so cute.. ',]\r\n\r\n        let selected = presentation[Math.floor(Math.random() * presentation.length)];\r\n\r\n        return selected\r\n    }\r\n\r\n    _selectPokemon = (id) => {\r\n\r\n        this.pokemonSelector.bounceOut(300).then(() => {\r\n            this.props.getPokemonData()\r\n\r\n            this.props.fetchPokemonData(id)\r\n        })\r\n    }\r\n\r\n    _clearPokemon() {\r\n\r\n        this.selectedPokemon.bounceOut(300).then(() => this.props.fetchClearPokemonData())\r\n\r\n    }\r\n\r\n    _savePokemon = (pokemon_id, user_id) => {\r\n\r\n        this.props.fetchSaveUserPokemonData(pokemon_id, user_id)\r\n\r\n        const { navigate } = this.props.navigation\r\n\r\n        navigate('Home')\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <ImageBackground ref={this.handleMainContainer} blurRadius={10} source={{ uri: 'https://www.teechu.com/wp-content/uploads/2018/08/pokemon-professor-oak-facts-trivia.jpg' }} style={{ backgroundColor: '#000022', flex: 1 }}>\r\n                <StatusBar backgroundColor='transparent' translucent barStyle='dark-content' />\r\n                <NavbarHome />\r\n                <Animatable.View ref={this.handleMainCard} animation=\"bounceIn\" delay={250} style={{\r\n                    flex: 1,\r\n                    margin: 20,\r\n                    marginLeft: wp(25),\r\n                    marginRight: wp(25),\r\n                    backgroundColor: '#000022',\r\n                    borderRadius: 5\r\n                }}\r\n                >\r\n                    <View style={{ flex: 0.20 }}>\r\n                        <View style={{ marginLeft: wp(5), marginRight: wp(5), alignSelf: 'center', flex: 0.30 }}>\r\n                            <Text style={{\r\n                                fontFamily: 'Raleway-Regular',\r\n                                fontSize: hp(3),\r\n                                textAlign: 'center',\r\n                                marginTop: hp(5),\r\n                                color: '#FECA1B'\r\n                            }}>\r\n                                Laboratory\r\n                        </Text>\r\n                        </View>\r\n                        <View style={{ marginLeft: wp(5), marginRight: wp(5), alignSelf: 'center', flex: 0.70 }}>\r\n                            <Text style={{\r\n                                fontFamily: 'Raleway-Bold',\r\n                                fontSize: hp(3),\r\n                                textAlign: 'center',\r\n                                marginTop: hp(5),\r\n                                color: 'white'\r\n                            }}>\r\n                                hey, glad to see you, did you think i was going to leave you alone in the wild world? choose your pokemon:\r\n                        </Text>\r\n                        </View>\r\n                    </View>\r\n                    {this.props.pokemon ?\r\n                        <View style={{ alignItems: 'center', flex: 0.80, justifyContent: 'center', marginTop: hp(2) }}>\r\n                            <Animatable.View ref={this.handleSelectedPokemon} animation=\"bounceIn\" duration={1000} style={{\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                flex: 1,\r\n                                borderColor: '#FECA1B',\r\n                                borderWidth: 1,\r\n                                padding: 5,\r\n                                marginBottom: hp(3),\r\n                                borderRadius: 10\r\n                            }}>\r\n                                <View style={{\r\n                                    position: 'absolute',\r\n                                    top: 5,\r\n                                    right: 5,\r\n                                }}>\r\n                                    <FontAwesome onPress={() => this._clearPokemon()} name=\"close\" color=\"#FECA1B\" size={32} />\r\n                                </View>\r\n                                <View style={{\r\n                                    flex: 0.12,\r\n                                }}>\r\n                                    <Text style={{ color: 'white', fontFamily: 'Raleway-Bold', fontSize: hp(3), textAlign: 'center', marginTop: hp(1) }}>{this.randomPresentation()}{this.props.pokemon[0].name}</Text>\r\n                                </View>\r\n                                <View style={{\r\n                                    flex: 0.28\r\n                                }}>\r\n                                    {this.props.pokemon ?\r\n                                        <Image source={{ uri: 'https://raw.githubusercontent.com/HybridShivam/Pokemon/master/assets/images/' + pad(this.props.pokemon[0].id, 3) + '.png' }}\r\n                                            style={{\r\n                                                width: 128,\r\n                                                height: 128,\r\n                                                resizeMode:'stretch'\r\n                                            }} /> : <ActivityIndicator style={{ padding: 50 }} size=\"large\" color=\"rgb(232, 163, 235)\" />\r\n                                    }\r\n                                </View>\r\n                                <View style={{\r\n                                    flex: 0.60,\r\n                                }}>\r\n                                    <Text style={{\r\n                                        color: 'white',\r\n                                        fontFamily: 'Raleway-bold',\r\n                                        marginTop: hp(2)\r\n                                    }}>who i am:</Text>\r\n                                    <Text style={{ color: 'white', fontFamily: 'Raleway-Thin' }}>{this.props.pokemon.specie.flavor_text_entries[1].flavor_text}</Text>\r\n                                </View>\r\n                                <View style={{\r\n                                    position: 'absolute',\r\n                                    bottom: 0,\r\n                                    backgroundColor: '#FECA1B',\r\n                                    height: hp(5),\r\n                                    width: '100%',\r\n                                    justifyContent: 'center',\r\n                                    borderBottomLeftRadius: 10,\r\n                                    borderBottomRightRadius: 10,\r\n\r\n                                }}>\r\n                                    <TouchableOpacity onPress={() => this._savePokemon(this.props.pokemon[0].id, this.props.user.id)}>\r\n                                        <Text style={{ fontFamily: 'Raleway-Bold', textAlign: 'center' }}>OK BUDDY, YOU COME WITH ME!</Text>\r\n\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n\r\n                            </Animatable.View>\r\n                        </View>\r\n                        :\r\n                        <Animatable.View ref={this.handlePokemonSelector} style={{ flex: 0.80 }}>\r\n                            <ScrollView style={{ alignSelf: 'center' }}>\r\n                                {this.props.isfetchingPokemons ?\r\n                                    <ActivityIndicator style={{ padding: 50 }} size=\"large\" color=\"rgb(232, 163, 235)\" />\r\n                                    :\r\n                                    <FlatList\r\n                                        horizontal\r\n                                        pagingEnabled={true}\r\n                                        showsHorizontalScrollIndicator={false}\r\n                                        legacyImplementation={false}\r\n                                        data={this.props.pokemons}\r\n                                        renderItem={({ item }) =>\r\n                                            <TouchableOpacity onPress={() => this._selectPokemon(item.id)}>\r\n                                                <Animatable.View\r\n                                                    style={{\r\n                                                        flex: 1,\r\n                                                        marginHorizontal: wp(2),\r\n                                                        marginTop: hp(5)\r\n                                                    }}\r\n                                                    animation=\"bounceInDown\"\r\n                                                    delay={250}>\r\n                                                    <View style={{ flex: 0.50 }}>\r\n                                                        <Image source={{ uri: 'https://raw.githubusercontent.com/HybridShivam/Pokemon/master/assets/images/' + pad(item.id, 3) + '.png' }} style={{ width: 96, height: 96 }} />\r\n\r\n                                                    </View>\r\n                                                    <View style={{ flex: 0.50, margin: 10 }}>\r\n                                                        <Text style={{\r\n                                                            color: '#feca1b',\r\n                                                            fontFamily: 'Raleway-Bold',\r\n                                                            textTransform: 'capitalize',\r\n                                                        }}>\r\n                                                            {item.name}\r\n                                                        </Text>\r\n                                                        <Text style={{\r\n                                                            color: 'white',\r\n                                                            fontFamily: 'Raleway-Thin',\r\n                                                            textTransform: 'capitalize',\r\n                                                            marginTop: hp(2)\r\n                                                        }}>Type:</Text>\r\n                                                        <View style={{\r\n                                                            flexDirection: 'column',\r\n                                                            marginTop: hp(1)\r\n                                                        }}>\r\n                                                            {item.types.map((item) => {\r\n                                                                return (\r\n                                                                    <Text style={{\r\n                                                                        color: 'white',\r\n                                                                        textTransform: 'capitalize',\r\n                                                                        fontFamily: 'Raleway-Bold',\r\n\r\n                                                                    }}>{item.type.name} </Text>\r\n                                                                )\r\n                                                            })}\r\n                                                        </View>\r\n                                                    </View>\r\n\r\n\r\n                                                </Animatable.View>\r\n                                            </TouchableOpacity>\r\n                                        }\r\n                                        keyExtractor={item => item.id}\r\n                                    />\r\n                                }\r\n                            </ScrollView>\r\n                        </Animatable.View>\r\n                    }\r\n                </Animatable.View>\r\n            </ImageBackground>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        user: state.loginUser.user,\r\n        userPokemons: state.pokemonData.userPokemons,\r\n        pokemon: state.pokemonData.pokemon,\r\n        isfetchingPokemon: state.pokemonData.isFeching,\r\n        pokemons: state.pokemonStartup.pokemons,\r\n        isfetchingPokemons: state.pokemonStartup.isFeching,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getPokemonStartup: () => {\r\n            return dispatch(getPokemonStartup())\r\n        },\r\n        fetchPokemonStartupData: () => {\r\n            return dispatch(fetchPokemonStartupData())\r\n        },\r\n        getPokemonData: () => {\r\n            return dispatch(getPokemonData())\r\n        },\r\n        fetchPokemonData: (id) => {\r\n            return dispatch(fetchPokemonData(id))\r\n        },\r\n        fetchSaveUserPokemonData: (pokemon_id, user_id) => {\r\n            return dispatch(fetchSaveUserPokemonData(pokemon_id, user_id))\r\n        },\r\n        fetchClearPokemonData: (id) => {\r\n            return dispatch(fetchClearPokemonData())\r\n        },\r\n        fetchGetUserPokemonData: () => {\r\n            return dispatch(fetchGetUserPokemonData())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(pokemonStartupLaboratory);\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#000000',\r\n    },\r\n    slide: {\r\n        height: hp(75),\r\n        width: wp(35),\r\n        alignSelf: 'center',\r\n    },\r\n    text: {\r\n        color: '#333',\r\n        marginTop: 92,\r\n        textAlign: 'center',\r\n    },\r\n    buttonCircle: {\r\n        borderRadius: 20,\r\n        justifyContent: 'center',\r\n    },\r\n\r\n});\r\n","import React, { Component } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    FlatList,\r\n    Image,\r\n    TextInput,\r\n    TouchableOpacity\r\n} from 'react-native';\r\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\n\r\nimport {\r\n    fetchFilterUserPokemonData\r\n} from '../../../../actions/pokemonDataActions'\r\nimport { pad } from '../../../../utils/url'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass MyPokemons extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchTerm: '',\r\n            searchAttribute: \"address.continent\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchFilterUserPokemonData(this.state.searchTerm)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <View style={{\r\n                margin: 10,\r\n                justifyContent: 'center',\r\n                flexDirection: 'column',\r\n            }}>\r\n                <View style={{\r\n                    flex: 0.50,\r\n                }}>\r\n                    <Text style={{\r\n                        color: 'white',\r\n                        fontFamily: 'Raleway-Regular',\r\n                        fontSize: hp(2.5),\r\n                        textAlign: 'center',\r\n                        textAlignVertical: 'center'\r\n                    }}>\r\n                        your buddies\r\n                    </Text>\r\n\r\n                </View>\r\n                <View style={{\r\n                    flex: 1,\r\n                    marginTop: hp(2),\r\n                }}>\r\n                    <View style={{\r\n                        flexDirection: 'row',\r\n                    }}>\r\n                        <TextInput\r\n                            placeholder={'find your pokemon'}\r\n                            placeholderTextColor='rgb(232, 163, 235)'\r\n                            value={this.state.searchTerm}\r\n                            onChangeText={(searchTerm) => this.setState({ searchTerm })}\r\n                            style={{\r\n                                flex:0.90,\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.2)',\r\n                                fontFamily: 'Raleway-Thin',\r\n                                color: 'rgb(232, 163, 235)',\r\n                                height: hp(3.75),\r\n                                fontSize: hp(3.75),\r\n                                borderBottomColor: \"rgb(232, 163, 235)\",\r\n                                borderBottomWidth: 1,\r\n                                padding: hp(3),\r\n                            }}\r\n                        />\r\n                        <FontAwesome onPress={() => this.props.fetchFilterUserPokemonData(this.state.searchTerm)}\r\n                            iconStyle={{\r\n                                textAlignVertical: 'center'\r\n                            }}\r\n                            style={{\r\n                                marginHorizontal: wp(2),\r\n                                flex:0.10,\r\n                                marginTop: hp(1)\r\n                            }} name=\"search\" size={24} color=\"#E4A0E8\" />\r\n                    </View>\r\n\r\n                </View>\r\n                <View style={{\r\n                    marginTop: hp(2)\r\n\r\n                }}>\r\n                    {this.props.userPokemons.length > 0 ?\r\n\r\n                        <FlatList\r\n                            data={this.props.userPokemons}\r\n                            keyExtractor={item => 'list-pokemon-' + item.id}\r\n                            renderItem={({ item }) => (\r\n\r\n                                <TouchableOpacity style={{\r\n                                    borderBottomColor: \"rgb(232, 163, 235)\",\r\n                                    borderBottomWidth: 1,\r\n                                    backgroundColor: 'rgba(0, 0, 0, 0.2)',\r\n                                    height: hp(15),\r\n                                    justifyContent: 'center',\r\n                                    flexDirection: 'row'\r\n                                }}>\r\n                                    <View style={{\r\n                                        flex: .25,\r\n                                        justifyContent: 'center',\r\n\r\n                                    }}>\r\n                                        {item.pokemonApi ? <Image source={{\r\n                                            uri: 'https://raw.githubusercontent.com/HybridShivam/Pokemon/master/assets/images/' + pad(item.pokemonApi.id, 3) + '.png'\r\n                                        }}\r\n                                            style={{ width: 72, height: 72, alignSelf: 'center' }}\r\n                                        /> : null}\r\n                                    </View>\r\n                                    <View style={{\r\n                                        flex: .75\r\n                                    }}>\r\n                                        <Text style={{\r\n                                            backgroundColor: 'transparent',\r\n                                            fontFamily: 'Raleway-Thin',\r\n                                            color: 'rgb(232, 163, 235)',\r\n                                            height: hp(3.75),\r\n                                            fontSize: hp(3.75),\r\n                                        }}>{item.pokemonApi ? item.pokemonApi.name : null}</Text>\r\n                                    </View>\r\n                                </TouchableOpacity>\r\n                            )}\r\n                        />\r\n                        : null}\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPokemons: state.pokemonData.userPokemons,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchFilterUserPokemonData: (search) => {\r\n            return dispatch(fetchFilterUserPokemonData(search))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPokemons);\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#000000',\r\n    },\r\n    slide: {\r\n        height: hp(75),\r\n        width: wp(35),\r\n        alignSelf: 'center',\r\n    },\r\n    text: {\r\n        color: '#333',\r\n        marginTop: 92,\r\n        textAlign: 'center',\r\n    },\r\n    buttonCircle: {\r\n        borderRadius: 20,\r\n        justifyContent: 'center',\r\n    },\r\n\r\n});\r\n","import React, { Component } from 'react';\r\nimport {\r\n    ImageBackground,\r\n    StyleSheet,\r\n    StatusBar,\r\n    View,\r\n    Text,\r\n} from 'react-native';\r\nimport * as Linking from 'expo-linking';\r\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport NavbarHome from '../commons/navbar/NavbarHome'\r\nimport MyPokemons from '../commons/MyPokemons/MyPokemons'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { getData } from '../../../actions/userActions'\r\n\r\nclass Home extends Component {\r\n\r\n    handleMainCard = ref => this.view = ref;\r\n    handleMainLogo = ref => this.mainLogo = ref;\r\n    handleSecLogo = ref => this.secLogo = ref;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checkLab: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getData()\r\n    }\r\n\r\n    toLaboratory() {\r\n        this.props.navigation.reset({\r\n            index: 0,\r\n            routes: [\r\n                {\r\n                    name: 'pokemonStartupLaboratory',\r\n                },\r\n            ],\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <ImageBackground ref={this.handleMainContainer} blurRadius={10} source={{ uri: 'https://i.pinimg.com/564x/d2/ea/d9/d2ead9c567843220250332203761c0d4.jpg' }} style={{ backgroundColor: '#000022', flex: 1 }}>\r\n                <StatusBar backgroundColor='transparent' translucent barStyle='dark-content' />\r\n                <NavbarHome />\r\n                <ScrollView>\r\n                    <View style={{\r\n                        flexDirection: 'row',\r\n                        margin: 25,\r\n                        marginLeft: wp(10),\r\n                        marginRight: wp(10)\r\n\r\n                    }}>\r\n                        <Animatable.View animation=\"bounceInLeft\" duration={500} delay={2000} style={{\r\n                            width: wp(40),\r\n                            height: hp(80),\r\n                            backgroundColor: '#000022',\r\n                            borderRadius: 5,\r\n                            marginHorizontal: 25\r\n                        }}\r\n                        >\r\n                            <View style={{\r\n                                flex: 1,\r\n                                margin: 10,\r\n                                justifyContent: 'center',\r\n                                flexDirection: 'column'\r\n                            }}>\r\n                                <View style={{\r\n                                    flex: 0.10\r\n                                }}>\r\n                                    <Text style={{\r\n                                        color: 'white',\r\n                                        fontFamily: 'Raleway-Regular',\r\n                                        fontSize: hp(2.5),\r\n                                        textAlign: 'center',\r\n                                        padding: 5\r\n                                    }}>\r\n                                        quests\r\n                                    </Text>\r\n\r\n                                </View>\r\n                                <View style={{ flex: 0.90 }}>\r\n                                    <Animatable.View animation='bounceInUp' duration={500} delay={2500}>\r\n                                        {this.props.userPokemons.length === 0 && this.props.user.lab_stage === 0 ?\r\n                                            <ImageBackground imageStyle={{ borderRadius: 10 }} style={{ height: hp(40), width: '100%' }} source={{ uri: 'https://i.pinimg.com/564x/fa/9a/b1/fa9ab12405644b30913d7c157512a0d9.jpg' }}>\r\n                                                <View style={{\r\n                                                    position: 'absolute',\r\n                                                    backgroundColor: 'rgba(0, 0, 32, 0.8)',\r\n                                                    bottom: 0,\r\n                                                    left: 0\r\n                                                }}>\r\n                                                    <Text onPress={() => this.toLaboratory()} style={{\r\n                                                        color: 'rgb(232, 163, 235)',\r\n                                                        fontFamily: 'Raleway-Bold',\r\n                                                        fontSize: hp(2.8),\r\n                                                        textAlign: 'center',\r\n                                                        textAlignVertical: 'center',\r\n                                                        paddingTop: 10\r\n                                                    }}> visit the laboratory\r\n                                                </Text>\r\n                                                    <Text onPress={() => this.toLaboratory()} style={{\r\n                                                        color: 'rgb(232, 163, 235)',\r\n                                                        fontFamily: 'Raleway-Regular',\r\n                                                        fontSize: hp(2.3),\r\n                                                        padding: 20\r\n                                                    }}>hey {this.props.user.name}! where have you been?!... no matter, the professor Boom is waiting for you... maybe you choose a first pokemon! run before they're all over.\r\n                                                </Text>\r\n                                                </View>\r\n                                            </ImageBackground>\r\n                                            : <Text style={{\r\n                                                color: 'rgb(232, 163, 235)',\r\n                                                fontFamily: 'Raleway-Bold',\r\n                                                fontSize: hp(2.8),\r\n                                                textAlign: 'center',\r\n                                                textAlignVertical: 'center',\r\n                                                paddingTop: 10\r\n                                            }}> nothing new around here...\r\n                                                </Text>}\r\n                                    </Animatable.View>\r\n                                </View>\r\n\r\n                            </View>\r\n                        </Animatable.View>\r\n                        <View style={{\r\n                            width: wp(37),\r\n                            flexDirection: 'column',\r\n                        }}>\r\n                            <View style={{\r\n                            }}>\r\n                                <Animatable.View animation=\"bounceInRight\" duration={500} delay={2500} style={{\r\n                                    flex: 1,\r\n                                    backgroundColor: '#000022',\r\n                                    borderRadius: 5,\r\n                                    marginHorizontal: 10,\r\n                                    height: hp(65)\r\n                                }}\r\n                                >\r\n\r\n                                    <MyPokemons />\r\n\r\n\r\n                                </Animatable.View>\r\n                                <Animatable.View animation=\"bounceInRight\" duration={500} delay={3000} style={{\r\n                                    backgroundColor: '#000022',\r\n                                    borderRadius: 5,\r\n                                    marginHorizontal: 10,\r\n                                    marginTop: hp(2)\r\n                                }}\r\n                                >\r\n                                    <View style={{\r\n                                        margin: 10,\r\n                                        justifyContent: 'center',\r\n                                        flexDirection: 'column',\r\n\r\n                                    }}>\r\n                                        <View style={{\r\n                                            flex: 1,\r\n                                            justifyContent: 'center',\r\n                                        }}>\r\n                                            <Text style={{\r\n                                                color: 'white',\r\n                                                fontFamily: 'Raleway-Bold',\r\n                                                textAlign: 'center',\r\n                                                padding: 5,\r\n                                            }}>\r\n                                                inventory coming soon...\r\n                                    </Text>\r\n                                        </View>\r\n                                    </View>\r\n                                </Animatable.View>\r\n                            </View>\r\n                            <Animatable.View animation=\"bounceInRight\" duration={500} delay={3500} style={{\r\n                                backgroundColor: '#000022',\r\n                                borderRadius: 5,\r\n                                marginHorizontal: 10,\r\n                                marginTop: hp(2)\r\n                            }}\r\n                            >\r\n                                <View style={{\r\n                                    margin: 20,\r\n                                }}>\r\n                                    <Text style={{\r\n                                        color: 'rgb(232, 163, 235)',\r\n                                        fontFamily: 'Raleway-Bold',\r\n                                        fontSize: hp(2.8),\r\n                                        textAlign: 'center',\r\n                                        textAlignVertical: 'center',\r\n                                        marginBottom: hp(4),\r\n                                        paddingTop: 10\r\n                                    }}> follow me for more delicious adventures\r\n                                                </Text>\r\n                                    <View style={{\r\n                                        justifyContent: 'center',\r\n                                        flexDirection: 'row'\r\n                                    }}>\r\n                                        <FontAwesome style={{ marginHorizontal: wp(2) }} onPress={() => Linking.openURL('https://www.instagram.com/migue.san.martin', '_blank')} name=\"instagram\" size={24} color=\"#E4A0E8\" />\r\n                                        <FontAwesome style={{ marginHorizontal: wp(2) }} onPress={() => Linking.openURL('https://twitter.com/crewtives_dev', '_blank')} name=\"twitter\" size={24} color=\"#E4A0E8\" />\r\n                                        <FontAwesome style={{ marginHorizontal: wp(2) }} onPress={() => Linking.openURL('https://github.com/crewtives', '_blank')} name=\"github\" size={24} color=\"#E4A0E8\" />\r\n                                        <FontAwesome style={{ marginHorizontal: wp(2) }} onPress={() => Linking.openURL('hhttps://www.linkedin.com/in/miguel-san-martin-5296971a4', '_blank')} name=\"linkedin\" size={24} color=\"#E4A0E8\" />\r\n                                    </View>\r\n                                </View>\r\n                            </Animatable.View>\r\n                        </View>\r\n                    </View>\r\n                </ScrollView>\r\n            </ImageBackground>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.loginUser.user,\r\n        userPokemons: state.pokemonData.userPokemons,\r\n        fetching: state.loginUser.isFeching\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getData: () => {\r\n            return dispatch(getData())\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#000000',\r\n    },\r\n    slide: {\r\n        height: hp(75),\r\n        width: wp(35),\r\n        alignSelf: 'center',\r\n    },\r\n    text: {\r\n        color: '#333',\r\n        marginTop: 92,\r\n        textAlign: 'center',\r\n    },\r\n    buttonCircle: {\r\n        borderRadius: 20,\r\n        justifyContent: 'center',\r\n    },\r\n\r\n});\r\n","import React, { Component } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport * as Font from 'expo-font';\r\nimport { get } from '../src/storage/services'\r\n\r\nimport {\r\n    ActivityIndicator,\r\n    Platform\r\n} from 'react-native'\r\n\r\nimport Login from '../src/components/Web/Login/Login.js';\r\nimport Onboarding from '../src/components/Web/Onboarding/Onboarding.js';\r\nimport pokemonStartupLaboratory from '../src/components/Web/pokemonStartupLaboratory/pokemonStartupLaboratory.js';\r\nimport Home from '../src/components/Web/Home/Home.js';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\nexport default class Navigator extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { fontsLoaded: false, route: 'Onboarding' };\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await Font.loadAsync({\r\n            'Raleway-bold': require('../assets/fonts/Raleway-Bold.ttf'),\r\n            'Raleway-bolditalic': require('../assets/fonts/Raleway-BoldItalic.ttf'),\r\n            'Raleway-thinitalic': require('../assets/fonts/Raleway-ThinItalic.ttf'),\r\n            'Raleway-italic': require('../assets/fonts/Raleway-Italic.ttf'),\r\n            'Raleway-regular': require('../assets/fonts/Raleway-Regular.ttf'),\r\n            'Raleway-thin': require('../assets/fonts/Raleway-Thin.ttf'),\r\n        });\r\n\r\n        let checkLogin = await get('pokemonFinderToken')\r\n\r\n        if (checkLogin === 'undefined') {\r\n            this.setState({\r\n                fontsLoaded: true\r\n            })\r\n        } else {\r\n            if (checkLogin.length > 0) {\r\n                this.setState({\r\n                    route: 'Home',\r\n                    fontsLoaded: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    fontsLoaded: true\r\n                })\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        if (Platform.OS === 'web') {\r\n            if (this.state.fontsLoaded === true) {\r\n                return (\r\n                    <NavigationContainer>\r\n                        <Stack.Navigator headerMode=\"none\" initialRouteName={this.state.route}>\r\n                            <Stack.Screen options={{ title: 'Onboarding' }} name=\"Onboarding\" component={Onboarding} />\r\n                            <Stack.Screen options={{ title: 'Login' }} name=\"Login\" component={Login} />\r\n                            <Stack.Screen options={{ title: 'pokemonStartupLaboratory' }} name=\"pokemonStartupLaboratory\" component={pokemonStartupLaboratory} />\r\n                            <Stack.Screen options={{ title: 'Home' }} name=\"Home\" component={Home} />\r\n                        </Stack.Navigator>\r\n                    </NavigationContainer>\r\n                )\r\n            } else {\r\n                return (\r\n\r\n                    <Animatable.View style={{ flex: 1, justifyContent: 'center', backgroundColor: '#000022' }}>\r\n                        <ActivityIndicator size=\"large\" color=\"rgb(232, 163, 235)\" />\r\n                    </Animatable.View>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}","import { LOGIN_USER, LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE } from '../../constants/user'\r\n\r\nconst initialState = {\r\n    user: '',\r\n    name: '',\r\n    email: '',\r\n    isFeching: false,\r\n    error: false\r\n}\r\n\r\nfunction loginReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return {\r\n                ...state,\r\n                name: '',\r\n                user: '',\r\n                email: '',\r\n                isFeching: true\r\n            }\r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n                email: action.name,\r\n                email: action.email,\r\n                isFeching: false\r\n            }\r\n        case LOGIN_USER_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFeching: false,\r\n                error: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loginReducer","import { POKEMON_STARTUP, POKEMON_STARTUP_SUCCESS, POKEMON_STARTUP_FAILURE } from '../../constants/pokemonStartup'\r\n\r\nconst initialState = {\r\n    pokemons: [],\r\n    isFeching: false,\r\n    error: false\r\n}\r\n\r\nfunction pokemonStartupReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case POKEMON_STARTUP:\r\n            return {\r\n                ...state,\r\n                isFeching: true\r\n            }\r\n        case POKEMON_STARTUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pokemons: action.pokemons,\r\n                isFeching: false\r\n            }\r\n        case POKEMON_STARTUP_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFeching: false,\r\n                error: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default pokemonStartupReducer","import {\r\n    POKEMON_DATA,\r\n    POKEMON_DATA_SUCCESS,\r\n    POKEMON_DATA_FAILURE,\r\n    CLEAR_POKEMON_DATA,\r\n    SAVE_USER_POKEMON_DATA\r\n} from '../../constants/pokemonData'\r\n\r\nconst initialState = {\r\n    pokemon: null,\r\n    isFeching: false,\r\n    error: false,\r\n    userPokemons: []\r\n}\r\n\r\nfunction pokemonDataReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case POKEMON_DATA:\r\n            return {\r\n                ...state,\r\n                isFeching: true\r\n            }\r\n        case POKEMON_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pokemon: action.pokemon,\r\n                isFeching: false\r\n            }\r\n        case POKEMON_DATA_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFeching: false,\r\n                error: true\r\n            }\r\n        case CLEAR_POKEMON_DATA:\r\n            return {\r\n                ...state,\r\n                pokemon: null,\r\n                isFeching: false,\r\n                error: false\r\n            }\r\n        \r\n        case SAVE_USER_POKEMON_DATA:\r\n            return {\r\n                ...state,\r\n                userPokemons: action.userPokemons,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default pokemonDataReducer","import { combineReducers } from 'redux';\r\nimport loginReducer from './auth/loginReducer'\r\nimport pokemonStartupReducer from './pokemon/pokemonStartupReducer'\r\nimport pokemonDataReducer from './pokemon/pokemonDataReducer'\r\n\r\nexport default combineReducers({\r\n    loginUser: loginReducer,\r\n    pokemonData: pokemonDataReducer,\r\n    pokemonStartup: pokemonStartupReducer,\r\n})","import React from 'react';\r\nimport Navigator from './navigator/Navigator'\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport Reducers from './src/reducers'\r\nimport thunk from 'redux-thunk'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = createStore(Reducers, applyMiddleware(thunk))\r\n\r\nexport default function App() {\r\n\r\n      return (\r\n        <Provider store={store}>\r\n          <Navigator />\r\n        </Provider>\r\n      );\r\n  \r\n}\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/onboarding.97d6478d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/onboarding1.2c8153b5.png\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-BoldItalic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-ThinItalic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Italic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Thin.ttf\";"],"sourceRoot":""}